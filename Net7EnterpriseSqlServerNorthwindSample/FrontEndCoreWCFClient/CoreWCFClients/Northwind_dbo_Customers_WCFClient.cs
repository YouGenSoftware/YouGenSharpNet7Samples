//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northwind_FrontEndCoreWCFClient.CoreWCFClients
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Northwind_FrontEndCoreWCFClient.CoreWCFClients.INorthwind_dbo_Customers_Service")]
    public interface INorthwind_dbo_Customers_Service
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetAll", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetAllResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCity", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCityResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCityAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCompanyName", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCompanyNameResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCompanyNameAsync(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCustomerID", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByCustomerIDResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCustomerIDAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByPostalCode", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByPostalCodeResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByPostalCodeAsync(string postalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByRegion", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/GetByRegionResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByRegionAsync(string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/Create", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/CreateResponse")]
        System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR> CreateAsync(Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCity", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCityResponse")]
        System.Threading.Tasks.Task UpdateByCityAsync(string city, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCompanyName", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCompanyNameResponse")]
        System.Threading.Tasks.Task UpdateByCompanyNameAsync(string companyName, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCustomerID", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByCustomerIDResponse")]
        System.Threading.Tasks.Task UpdateByCustomerIDAsync(string customerID, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByPostalCode", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByPostalCodeResponse")]
        System.Threading.Tasks.Task UpdateByPostalCodeAsync(string postalCode, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByRegion", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/UpdateByRegionResponse")]
        System.Threading.Tasks.Task UpdateByRegionAsync(string region, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCity", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCityResponse")]
        System.Threading.Tasks.Task DeleteByCityAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCompanyName", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCompanyNameResponse")]
        System.Threading.Tasks.Task DeleteByCompanyNameAsync(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCustomerID", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByCustomerIDResponse")]
        System.Threading.Tasks.Task DeleteByCustomerIDAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByPostalCode", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByPostalCodeResponse")]
        System.Threading.Tasks.Task DeleteByPostalCodeAsync(string postalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByRegion", ReplyAction="http://tempuri.org/INorthwind_dbo_Customers_Service/DeleteByRegionResponse")]
        System.Threading.Tasks.Task DeleteByRegionAsync(string region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface INorthwind_dbo_Customers_ServiceChannel : Northwind_FrontEndCoreWCFClient.CoreWCFClients.INorthwind_dbo_Customers_Service, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class Northwind_dbo_Customers_ServiceClient : System.ServiceModel.ClientBase<Northwind_FrontEndCoreWCFClient.CoreWCFClients.INorthwind_dbo_Customers_Service>, Northwind_FrontEndCoreWCFClient.CoreWCFClients.INorthwind_dbo_Customers_Service
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Northwind_dbo_Customers_ServiceClient() : 
                base(Northwind_dbo_Customers_ServiceClient.GetDefaultBinding(), Northwind_dbo_Customers_ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_INorthwind_dbo_Customers_Service.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Northwind_dbo_Customers_ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(Northwind_dbo_Customers_ServiceClient.GetBindingForEndpoint(endpointConfiguration), Northwind_dbo_Customers_ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Northwind_dbo_Customers_ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Northwind_dbo_Customers_ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Northwind_dbo_Customers_ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Northwind_dbo_Customers_ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Northwind_dbo_Customers_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetAllAsync()
        {
            return base.Channel.GetAllAsync();
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCityAsync(string city)
        {
            return base.Channel.GetByCityAsync(city);
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCompanyNameAsync(string companyName)
        {
            return base.Channel.GetByCompanyNameAsync(companyName);
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByCustomerIDAsync(string customerID)
        {
            return base.Channel.GetByCustomerIDAsync(customerID);
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByPostalCodeAsync(string postalCode)
        {
            return base.Channel.GetByPostalCodeAsync(postalCode);
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR[]> GetByRegionAsync(string region)
        {
            return base.Channel.GetByRegionAsync(region);
        }
        
        public System.Threading.Tasks.Task<Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR> CreateAsync(Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.CreateAsync(input);
        }
        
        public System.Threading.Tasks.Task UpdateByCityAsync(string city, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.UpdateByCityAsync(city, input);
        }
        
        public System.Threading.Tasks.Task UpdateByCompanyNameAsync(string companyName, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.UpdateByCompanyNameAsync(companyName, input);
        }
        
        public System.Threading.Tasks.Task UpdateByCustomerIDAsync(string customerID, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.UpdateByCustomerIDAsync(customerID, input);
        }
        
        public System.Threading.Tasks.Task UpdateByPostalCodeAsync(string postalCode, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.UpdateByPostalCodeAsync(postalCode, input);
        }
        
        public System.Threading.Tasks.Task UpdateByRegionAsync(string region, Northwind_Common.IndirectReferenceTransformerModels.Northwind_dbo_Customers_IR input)
        {
            return base.Channel.UpdateByRegionAsync(region, input);
        }
        
        public System.Threading.Tasks.Task DeleteByCityAsync(string city)
        {
            return base.Channel.DeleteByCityAsync(city);
        }
        
        public System.Threading.Tasks.Task DeleteByCompanyNameAsync(string companyName)
        {
            return base.Channel.DeleteByCompanyNameAsync(companyName);
        }
        
        public System.Threading.Tasks.Task DeleteByCustomerIDAsync(string customerID)
        {
            return base.Channel.DeleteByCustomerIDAsync(customerID);
        }
        
        public System.Threading.Tasks.Task DeleteByPostalCodeAsync(string postalCode)
        {
            return base.Channel.DeleteByPostalCodeAsync(postalCode);
        }
        
        public System.Threading.Tasks.Task DeleteByRegionAsync(string region)
        {
            return base.Channel.DeleteByRegionAsync(region);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INorthwind_dbo_Customers_Service))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INorthwind_dbo_Customers_Service))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/Northwind_dbo_Customers_Service");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Northwind_dbo_Customers_ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INorthwind_dbo_Customers_Service);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Northwind_dbo_Customers_ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INorthwind_dbo_Customers_Service);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_INorthwind_dbo_Customers_Service,
        }
    }
}
