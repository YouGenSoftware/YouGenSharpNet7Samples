/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Northwind_BackEndSqlEntities.Entities;
using Northwind_BackEndCommon.Services;
using Northwind_Common.IndirectReferenceTransformerModels;
namespace Northwind_BackEndCommon.IndirectReferenceTransformers;
public partial class IRTransformers : IIRTransformers
{
	public Northwind_dbo_Orders_IR ToIndirectModel(Northwind_dbo_Orders input, Boolean isSecondaryLookup = false)
	{
		var retData = new Northwind_dbo_Orders_IR(
			orderID_IR_ : _encryptionDecryptionService!.EncInt32(input.OrderID),
			customerID_ : input.CustomerID,
			employeeID_IR_ : _encryptionDecryptionService!.EncInt32Nullable(input.EmployeeID),
			orderDate_ : input.OrderDate,
			requiredDate_ : input.RequiredDate,
			shippedDate_ : input.ShippedDate,
			shipVia_IR_ : _encryptionDecryptionService!.EncInt32Nullable(input.ShipVia),
			freight_ : input.Freight,
			shipName_ : input.ShipName,
			shipAddress_ : input.ShipAddress,
			shipCity_ : input.ShipCity,
			shipRegion_ : input.ShipRegion,
			shipPostalCode_ : input.ShipPostalCode,
			shipCountry_ : input.ShipCountry
			);
		if (input.FK_Orders_Customers_Ref != null) retData.FK_Orders_Customers_Ref_IR = ToIndirectModel(input.FK_Orders_Customers_Ref!, true);
		if (input.FK_Orders_Employees_Ref != null) retData.FK_Orders_Employees_Ref_IR = ToIndirectModel(input.FK_Orders_Employees_Ref!, true);
		if (input.FK_Orders_Shippers_Ref != null) retData.FK_Orders_Shippers_Ref_IR = ToIndirectModel(input.FK_Orders_Shippers_Ref!, true);
		if (!isSecondaryLookup && input.FK_Order_Details_Orders_RefBy!.Any()) retData.FK_Order_Details_Orders_RefBy_IR = input.FK_Order_Details_Orders_RefBy!.Select(x => ToIndirectModel(x, true)).ToList()!;
			retData.PrimaryKeyHashedForUniqueObjectComparison = _encryptionDecryptionService!.CreateHash(retData.OrderID_IR);
		return retData;
	}
	public Northwind_dbo_Orders ToEntity(Northwind_dbo_Orders_IR input, Boolean isSecondaryLookup = false)
	{
		var retData = new Northwind_dbo_Orders(		
			orderID_ : _encryptionDecryptionService.DecInt32(input.OrderID_IR),
			customerID_ : input.CustomerID,
			employeeID_ : _encryptionDecryptionService.DecInt32Nullable(input.EmployeeID_IR),
			orderDate_ : input.OrderDate,
			requiredDate_ : input.RequiredDate,
			shippedDate_ : input.ShippedDate,
			shipVia_ : _encryptionDecryptionService.DecInt32Nullable(input.ShipVia_IR),
			freight_ : input.Freight,
			shipName_ : input.ShipName,
			shipAddress_ : input.ShipAddress,
			shipCity_ : input.ShipCity,
			shipRegion_ : input.ShipRegion,
			shipPostalCode_ : input.ShipPostalCode,
			shipCountry_ : input.ShipCountry
			);
		if (input.FK_Orders_Customers_Ref_IR != null) retData.FK_Orders_Customers_Ref = ToEntity(input.FK_Orders_Customers_Ref_IR!, true);
		if (input.FK_Orders_Employees_Ref_IR != null) retData.FK_Orders_Employees_Ref = ToEntity(input.FK_Orders_Employees_Ref_IR!, true);
		if (input.FK_Orders_Shippers_Ref_IR != null) retData.FK_Orders_Shippers_Ref = ToEntity(input.FK_Orders_Shippers_Ref_IR!, true);
		return retData;
	}
}
