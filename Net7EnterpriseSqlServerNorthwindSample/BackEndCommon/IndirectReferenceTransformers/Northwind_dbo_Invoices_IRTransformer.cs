/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Northwind_BackEndSqlEntities.Entities;
using Northwind_BackEndCommon.Services;
using Northwind_Common.IndirectReferenceTransformerModels;
namespace Northwind_BackEndCommon.IndirectReferenceTransformers;
public partial class IRTransformers : IIRTransformers
{
	public Northwind_dbo_Invoices_IR ToIndirectModel(Northwind_dbo_Invoices input)
	{
		var retData = new Northwind_dbo_Invoices_IR(
			shipName_ : input.ShipName,
			shipAddress_ : input.ShipAddress,
			shipCity_ : input.ShipCity,
			shipRegion_ : input.ShipRegion,
			shipPostalCode_ : input.ShipPostalCode,
			shipCountry_ : input.ShipCountry,
			customerID_ : input.CustomerID,
			customerName_ : input.CustomerName,
			address_ : input.Address,
			city_ : input.City,
			region_ : input.Region,
			postalCode_ : input.PostalCode,
			country_ : input.Country,
			salesperson_ : input.Salesperson,
			orderID_IR_ : _encryptionDecryptionService!.EncInt32(input.OrderID),
			orderDate_ : input.OrderDate,
			requiredDate_ : input.RequiredDate,
			shippedDate_ : input.ShippedDate,
			shipperName_ : input.ShipperName,
			productID_IR_ : _encryptionDecryptionService!.EncInt32(input.ProductID),
			productName_ : input.ProductName,
			unitPrice_ : input.UnitPrice,
			quantity_ : input.Quantity,
			discount_ : input.Discount,
			extendedPrice_ : input.ExtendedPrice,
			freight_ : input.Freight
			);
		return retData;
	}
	public Northwind_dbo_Invoices ToEntity(Northwind_dbo_Invoices_IR input)
	{
		var retData = new Northwind_dbo_Invoices(		
			shipName_ : input.ShipName,
			shipAddress_ : input.ShipAddress,
			shipCity_ : input.ShipCity,
			shipRegion_ : input.ShipRegion,
			shipPostalCode_ : input.ShipPostalCode,
			shipCountry_ : input.ShipCountry,
			customerID_ : input.CustomerID,
			customerName_ : input.CustomerName ?? String.Empty,
			address_ : input.Address,
			city_ : input.City,
			region_ : input.Region,
			postalCode_ : input.PostalCode,
			country_ : input.Country,
			salesperson_ : input.Salesperson ?? String.Empty,
			orderID_ : _encryptionDecryptionService.DecInt32(input.OrderID_IR),
			orderDate_ : input.OrderDate,
			requiredDate_ : input.RequiredDate,
			shippedDate_ : input.ShippedDate,
			shipperName_ : input.ShipperName ?? String.Empty,
			productID_ : _encryptionDecryptionService.DecInt32(input.ProductID_IR),
			productName_ : input.ProductName ?? String.Empty,
			unitPrice_ : input.UnitPrice ?? default,
			quantity_ : input.Quantity ?? default,
			discount_ : input.Discount ?? default,
			extendedPrice_ : input.ExtendedPrice,
			freight_ : input.Freight
			);
		return retData;
	}
}
