/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.AspNetCore.SignalR;
using Northwind_Common.IndirectReferenceTransformerModels;
using Northwind_BackEndCommon.RequestHandlers;
namespace Northwind_BackEndSignalRWebsocketServer.Hubs;
public class Northwind_dbo_Orders_Hub : Hub<INorthwind_dbo_Orders_Hub>
{
	private readonly INorthwind_dbo_Orders_RequestHandler _requestHandler;
	public Northwind_dbo_Orders_Hub(INorthwind_dbo_Orders_RequestHandler requestHandler)
	{
		_requestHandler = requestHandler;
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetAll()
	{
		return await _requestHandler.HandleGetAll();
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByCustomerID(String? customerID)
	{
		return await _requestHandler.HandleGetByCustomerID(customerID);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByEmployeeID(String? employeeID_IR)
	{
		return await _requestHandler.HandleGetByEmployeeID(employeeID_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByOrderDate(DateTime? orderDate)
	{
		return await _requestHandler.HandleGetByOrderDate(orderDate);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByOrderID(String? orderID_IR)
	{
		return await _requestHandler.HandleGetByOrderID(orderID_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByShippedDate(DateTime? shippedDate)
	{
		return await _requestHandler.HandleGetByShippedDate(shippedDate);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByShipVia(String? shipVia_IR)
	{
		return await _requestHandler.HandleGetByShipVia(shipVia_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Orders_IR>?> GetByShipPostalCode(String? shipPostalCode)
	{
		return await _requestHandler.HandleGetByShipPostalCode(shipPostalCode);
	}
	public async Task<Northwind_dbo_Orders_IR?> Create(Northwind_dbo_Orders_IR input)
	{
		return await _requestHandler.HandleCreate(input);
	}
	public async Task UpdateByCustomerID(String? customerID, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByCustomerID(customerID, input);
	}
	public async Task UpdateByEmployeeID(String? employeeID_IR, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByEmployeeID(employeeID_IR, input);
	}
	public async Task UpdateByOrderDate(DateTime? orderDate, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByOrderDate(orderDate, input);
	}
	public async Task UpdateByOrderID(String? orderID_IR, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByOrderID(orderID_IR, input);
	}
	public async Task UpdateByShippedDate(DateTime? shippedDate, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByShippedDate(shippedDate, input);
	}
	public async Task UpdateByShipVia(String? shipVia_IR, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByShipVia(shipVia_IR, input);
	}
	public async Task UpdateByShipPostalCode(String? shipPostalCode, Northwind_dbo_Orders_IR input)
	{
		await _requestHandler.HandleUpdateByShipPostalCode(shipPostalCode, input);
	}
	public async Task DeleteByCustomerID(String? customerID)
	{
		await _requestHandler.HandleDeleteByCustomerID(customerID);
	}
	public async Task DeleteByEmployeeID(String? employeeID_IR)
	{
		await _requestHandler.HandleDeleteByEmployeeID(employeeID_IR);
	}
	public async Task DeleteByOrderDate(DateTime? orderDate)
	{
		await _requestHandler.HandleDeleteByOrderDate(orderDate);
	}
	public async Task DeleteByOrderID(String? orderID_IR)
	{
		await _requestHandler.HandleDeleteByOrderID(orderID_IR);
	}
	public async Task DeleteByShippedDate(DateTime? shippedDate)
	{
		await _requestHandler.HandleDeleteByShippedDate(shippedDate);
	}
	public async Task DeleteByShipVia(String? shipVia_IR)
	{
		await _requestHandler.HandleDeleteByShipVia(shipVia_IR);
	}
	public async Task DeleteByShipPostalCode(String? shipPostalCode)
	{
		await _requestHandler.HandleDeleteByShipPostalCode(shipPostalCode);
	}
}
