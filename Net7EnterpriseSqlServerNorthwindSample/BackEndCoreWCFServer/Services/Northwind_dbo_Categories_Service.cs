/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Northwind_Common.IndirectReferenceTransformerModels;
using Northwind_BackEndCommon.RequestHandlers;
namespace Northwind_BackEndCoreWCFServer.Services;
public partial class Northwind_dbo_Categories_Service : INorthwind_dbo_Categories_Service
{
	private readonly INorthwind_dbo_Categories_RequestHandler _requestHandler;
	public Northwind_dbo_Categories_Service(INorthwind_dbo_Categories_RequestHandler requestHandler)
	{
		_requestHandler = requestHandler;
	}
	public async Task<IEnumerable<Northwind_dbo_Categories_IR>?> GetAll()
	{
		return await _requestHandler.HandleGetAll();
	}
	public async Task<IEnumerable<Northwind_dbo_Categories_IR>?> GetByCategoryName(String categoryName)
	{
		return await _requestHandler.HandleGetByCategoryName(categoryName);
	}
	public async Task<IEnumerable<Northwind_dbo_Categories_IR>?> GetByCategoryID(String? categoryID_IR)
	{
		return await _requestHandler.HandleGetByCategoryID(categoryID_IR);
	}
	public async Task<Northwind_dbo_Categories_IR?> Create(Northwind_dbo_Categories_IR input)
	{
		return await _requestHandler.HandleCreate(input);
	}
	public async Task UpdateByCategoryName(String categoryName, Northwind_dbo_Categories_IR input)
	{
		await _requestHandler.HandleUpdateByCategoryName(categoryName, input);
	}
	public async Task UpdateByCategoryID(String? categoryID_IR, Northwind_dbo_Categories_IR input)
	{
		await _requestHandler.HandleUpdateByCategoryID(categoryID_IR, input);
	}
	public async Task DeleteByCategoryName(String categoryName)
	{
		await _requestHandler.HandleDeleteByCategoryName(categoryName);
	}
	public async Task DeleteByCategoryID(String? categoryID_IR)
	{
		await _requestHandler.HandleDeleteByCategoryID(categoryID_IR);
	}
}
