/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
const controllerRoute = '/Northwind_dbo_CustomerCustomerDemo';
async function Northwind_dbo_CustomerCustomerDemo_IR_GetAll() {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetAll';
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_CustomerCustomerDemo_IR_GetByCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByCustomerIDAndCustomerTypeID?' + GetUriForParamsForCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_CustomerCustomerDemo_IR_Create(input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'Create';
	config.method = 'post';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_CustomerCustomerDemo_IR_UpdateByCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByCustomerIDAndCustomerTypeID?' + GetUriForParamsForCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_CustomerCustomerDemo_IR_DeleteByCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByCustomerIDAndCustomerTypeID?' + GetUriForParamsForCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
function GetUriForParamsForCustomerIDAndCustomerTypeID(CustomerID,CustomerTypeID) {
	const urlParams = new URLSearchParams({
		"CustomerID": CustomerID,
		"CustomerTypeID": CustomerTypeID
	});
	return urlParams.toString();
}
