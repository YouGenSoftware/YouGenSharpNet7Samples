<!-- **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 -->
@implements IDisposable
@page "/procedures/Northwind_dbo_ProductsAndCategories/" 
@inherits ComponentBaseOverrider
<PageTitle>@modelName</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">@modelName</MudText>
@if (waiting == true)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudExpansionPanels>
        <MudExpansionPanel>
            <TitleContent>
                <div class="d-flex">
                    <MudText><strong>Data fetch filters</strong></MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudCard>
                    <MudCardContent>
                    </MudCardContent>
                    <MudCardActions>
                        <MudSpacer />
                        <MudButton Variant="Variant.Filled" Color="Color.Default" Class="ml-auto" OnClick="@(async () => await Execute())">Execute</MudButton>
                    </MudCardActions>
                </MudCard>
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>
	@if (queryOutput_Query1_RetrievedRecords != null)
	{
		<Northwind_dbo_ProductsAndCategories_OM_Query1_ProcedureQueryListTable RetrievedRecords="queryOutput_Query1_RetrievedRecords" />
	}
	@if (queryOutput_Query2_RetrievedRecords != null)
	{
		<Northwind_dbo_ProductsAndCategories_OM_Query2_ProcedureQueryListTable RetrievedRecords="queryOutput_Query2_RetrievedRecords" />
	}
}
@code {
	[Inject]
	private Northwind_dbo_ProductsAndCategories_StoredProcedure_HttpClient? httpClient { get; set; } = default!;
	// [Inject]
	// private Northwind_dbo_ProductsAndCategories_StoredProcedure_SignalRWebsocketClient? websocketClient { get; set; } = default!;
	protected IEnumerable<Northwind_dbo_ProductsAndCategories_OM_Query1_IR>? queryOutput_Query1_RetrievedRecords;
	protected IEnumerable<Northwind_dbo_ProductsAndCategories_OM_Query2_IR>? queryOutput_Query2_RetrievedRecords;
    private MudForm? inputForm = new MudForm();
    private String modelName = "Northwind_dbo_ProductsAndCategories";
    private Boolean waiting;
    private async Task Execute()
    {       
		waiting = true;
		StateHasChanged();
		var retData = await httpClient!.Call_Northwind_dbo_ProductsAndCategories();
		// var retData = await websocketClient!.Call_Northwind_dbo_ProductsAndCategories();
		queryOutput_Query1_RetrievedRecords = retData!.Query1_Results_IR;
		queryOutput_Query2_RetrievedRecords = retData!.Query2_Results_IR;
        waiting = false;
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // await websocketClient!.InitializeAsync();
    }
    protected override async Task OnParametersSetAsync() 
    {
        await base.OnParametersSetAsync();
    }
    public void Dispose()
    {
        // websocketClient?.DisposeAsync();
        // websocketClient = null;
    }
}
