<!-- **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200636 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 -->
<h4 Class="my-2">@modelName</h4>
<MudTable T="Northwind_dbo_ProductsAndCategories_OM_Query1_IR" @ref="primaryTable" Height="250px"
        RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent"
        Items="RetrievedRecords" HorizontalScrollbar="true" Hover="true"
        SortLabel="Sort By" Filter="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR,Boolean>(FilterFuncAll)" FixedHeader="true">
    <ToolBarContent>
        <MudTextField @bind-Value="searchFilterText" Placeholder="Filter retrieved records" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
		<HeaderContent>
			<!-- <MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.ProductID_IR!)">ProductID_IR</MudTableSortLabel></MudTh> -->
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.ProductName!)">ProductName</MudTableSortLabel></MudTh>
			<!-- <MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.SupplierID_IR!)">SupplierID_IR</MudTableSortLabel></MudTh> -->
			<!-- <MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.CategoryID_IR!)">CategoryID_IR</MudTableSortLabel></MudTh> -->
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.QuantityPerUnit!)">QuantityPerUnit</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.UnitPrice!)">UnitPrice</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.UnitsInStock!)">UnitsInStock</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.UnitsOnOrder!)">UnitsOnOrder</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.ReorderLevel!)">ReorderLevel</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Northwind_dbo_ProductsAndCategories_OM_Query1_IR, object>(x=>x.Discontinued!)">Discontinued</MudTableSortLabel></MudTh>
		</HeaderContent>
		<RowTemplate>
			<!-- <MudTd DataLabel="ProductID_IR">@context.ProductID_IR</MudTd> -->
			<MudTd DataLabel="ProductName">@context.ProductName</MudTd>
			<!-- <MudTd DataLabel="SupplierID_IR">@context.SupplierID_IR</MudTd> -->
			<!-- <MudTd DataLabel="CategoryID_IR">@context.CategoryID_IR</MudTd> -->
			<MudTd DataLabel="QuantityPerUnit">@context.QuantityPerUnit</MudTd>
			<MudTd DataLabel="UnitPrice">@context.UnitPrice</MudTd>
			<MudTd DataLabel="UnitsInStock">@context.UnitsInStock</MudTd>
			<MudTd DataLabel="UnitsOnOrder">@context.UnitsOnOrder</MudTd>
			<MudTd DataLabel="ReorderLevel">@context.ReorderLevel</MudTd>
			<MudTd DataLabel="Discontinued">@context.Discontinued</MudTd>
		</RowTemplate>
</MudTable>
@code {
    [Parameter]
    public IEnumerable<Northwind_dbo_ProductsAndCategories_OM_Query1_IR>? RetrievedRecords { get; set; }
    private MudTable<Northwind_dbo_ProductsAndCategories_OM_Query1_IR>? primaryTable = new MudTable<Northwind_dbo_ProductsAndCategories_OM_Query1_IR>();
    private Northwind_dbo_ProductsAndCategories_OM_Query1_IR searchModel = new Northwind_dbo_ProductsAndCategories_OM_Query1_IR();
    private String searchFilterText = "";
    private String modelName = "Northwind_dbo_ProductsAndCategories_OM_Query1_IR";
    private Boolean FilterFuncAll(Northwind_dbo_ProductsAndCategories_OM_Query1_IR element) => FilterFunc(element, searchFilterText);
    private Boolean FilterFunc(Northwind_dbo_ProductsAndCategories_OM_Query1_IR element, String searchString)
    {
        if (String.IsNullOrWhiteSpace(searchString))
            return true;
        if ($"{ element.ProductID_IR } { element.ProductName } { element.SupplierID_IR } { element.CategoryID_IR } { element.QuantityPerUnit } { element.UnitPrice } { element.UnitsInStock } { element.UnitsOnOrder } { element.ReorderLevel } { element.Discontinued } ".Contains(searchString))
           return true;
        return false;
    }
    private void RowClickEvent(TableRowClickEventArgs<Northwind_dbo_ProductsAndCategories_OM_Query1_IR> tableRowClickEventArgs)
	{
	}
    private String SelectedRowClassFunc(Northwind_dbo_ProductsAndCategories_OM_Query1_IR element, Int32 rowNumber)
    {
        if (primaryTable!.SelectedItem != null && primaryTable!.SelectedItem.Equals(element))
            return "selected";
        else
            return "";
    }
    protected override async Task OnInitializedAsync()
    {        
        await base.OnInitializedAsync();
    }
    protected override async Task OnParametersSetAsync() 
    {
        await base.OnParametersSetAsync();
    }
}
