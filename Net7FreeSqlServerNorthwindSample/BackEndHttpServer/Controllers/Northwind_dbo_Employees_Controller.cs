/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200257 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Free Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use for evaluation purposes only. ****
**** This comment block must not be removed. ****
 */
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Northwind_BackEndSqlEntities.Entities;
using Northwind_BackEndCommon.RequestHandlers;
namespace Northwind_BackEndDatabaseClient.Controllers;
[SwaggerTag(@"Controller Description: N/A")]
[RequireHttps]
public class Northwind_dbo_Employees_Controller : ControllerBase
{
	private readonly INorthwind_dbo_Employees_RequestHandler _requestHandler;
	public Northwind_dbo_Employees_Controller(INorthwind_dbo_Employees_RequestHandler requestHandler)
	{
		_requestHandler = requestHandler;
	}
	/// <summary>
	/// Get All records of Employees table
	/// </summary>
	[HttpGet, Route("Northwind_dbo_Employees/GetAll")]
	public async Task<IEnumerable<Northwind_dbo_Employees>?> GetAll()
	{
		return await _requestHandler.HandleGetAll();
	}
	/// <summary>
	/// Get record of Employees table by indexed selector(s)
	/// </summary>
	[HttpGet, Route("Northwind_dbo_Employees/GetByLastName")]
	public async Task<IEnumerable<Northwind_dbo_Employees>?> GetByLastName(String lastName)
	{
		return await _requestHandler.HandleGetByLastName(lastName);
	}
	/// <summary>
	/// Get record of Employees table by indexed selector(s)
	/// </summary>
	[HttpGet, Route("Northwind_dbo_Employees/GetByEmployeeID")]
	public async Task<IEnumerable<Northwind_dbo_Employees>?> GetByEmployeeID(Int32 employeeID)
	{
		return await _requestHandler.HandleGetByEmployeeID(employeeID);
	}
	/// <summary>
	/// Get record of Employees table by indexed selector(s)
	/// </summary>
	[HttpGet, Route("Northwind_dbo_Employees/GetByPostalCode")]
	public async Task<IEnumerable<Northwind_dbo_Employees>?> GetByPostalCode(String? postalCode)
	{
		return await _requestHandler.HandleGetByPostalCode(postalCode);
	}
	/// <summary>
	/// Create and return record of Employees table
	/// Note: Any foreign key data referenced by or referencing these records should not be included in the body payload
	/// </summary>
	[HttpPost, Route("Northwind_dbo_Employees/Create")]
	public async Task<Northwind_dbo_Employees?> Create([FromBody]Northwind_dbo_Employees input)
	{
		return await _requestHandler.HandleCreate(input);
	}
	/// <summary>
	/// Update record of Employees table by indexed selector(s)
	/// Note: Any foreign key data referenced by or referencing these records should not be included in the body payload
	/// </summary>
	[HttpPut, Route("Northwind_dbo_Employees/UpdateByLastName")]
	public async Task UpdateByLastName(String lastName, [FromBody]Northwind_dbo_Employees input)
	{
		await _requestHandler.HandleUpdateByLastName(lastName, input);
	}
	/// <summary>
	/// Update record of Employees table by indexed selector(s)
	/// Note: Any foreign key data referenced by or referencing these records should not be included in the body payload
	/// </summary>
	[HttpPut, Route("Northwind_dbo_Employees/UpdateByEmployeeID")]
	public async Task UpdateByEmployeeID(Int32 employeeID, [FromBody]Northwind_dbo_Employees input)
	{
		await _requestHandler.HandleUpdateByEmployeeID(employeeID, input);
	}
	/// <summary>
	/// Update record of Employees table by indexed selector(s)
	/// Note: Any foreign key data referenced by or referencing these records should not be included in the body payload
	/// </summary>
	[HttpPut, Route("Northwind_dbo_Employees/UpdateByPostalCode")]
	public async Task UpdateByPostalCode(String? postalCode, [FromBody]Northwind_dbo_Employees input)
	{
		await _requestHandler.HandleUpdateByPostalCode(postalCode, input);
	}
	/// <summary>
	/// Delete record of Employees table by indexed selector(s)
	/// </summary>
	[HttpDelete, Route("Northwind_dbo_Employees/DeleteByLastName")]
	public async Task DeleteByLastName(String lastName)
	{
		await _requestHandler.HandleDeleteByLastName(lastName);
	}
	/// <summary>
	/// Delete record of Employees table by indexed selector(s)
	/// </summary>
	[HttpDelete, Route("Northwind_dbo_Employees/DeleteByEmployeeID")]
	public async Task DeleteByEmployeeID(Int32 employeeID)
	{
		await _requestHandler.HandleDeleteByEmployeeID(employeeID);
	}
	/// <summary>
	/// Delete record of Employees table by indexed selector(s)
	/// </summary>
	[HttpDelete, Route("Northwind_dbo_Employees/DeleteByPostalCode")]
	public async Task DeleteByPostalCode(String? postalCode)
	{
		await _requestHandler.HandleDeleteByPostalCode(postalCode);
	}
}
