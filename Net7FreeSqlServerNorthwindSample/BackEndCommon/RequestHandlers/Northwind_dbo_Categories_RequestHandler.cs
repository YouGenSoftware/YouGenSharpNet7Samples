/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200257 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Free Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use for evaluation purposes only. ****
**** This comment block must not be removed. ****
 */
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Northwind_BackEndDatabaseClient.Repositories;
using Northwind_BackEndSqlEntities.Entities;
namespace Northwind_BackEndCommon.RequestHandlers;
public class Northwind_dbo_Categories_RequestHandler : INorthwind_dbo_Categories_RequestHandler
{
    private readonly ILogger<Northwind_dbo_Categories_RequestHandler> _logger;
    private readonly INorthwind_dbo_Categories_Repository _repository;
    public Northwind_dbo_Categories_RequestHandler(
    ILogger<Northwind_dbo_Categories_RequestHandler> logger
    ,INorthwind_dbo_Categories_Repository repository)
    {
        _logger = logger;
        _repository = repository;
    }
	//Main Handlers
	public async Task<IEnumerable<Northwind_dbo_Categories>?> HandleGetAll()
	{
		var retData = await _repository.GetAll();
		return retData;
	}
	public async Task<IEnumerable<Northwind_dbo_Categories>?> HandleGetByCategoryName(String categoryName)
	{
		var retData = await _repository.GetByCategoryName(categoryName);
		return retData;
	}
	public async Task<IEnumerable<Northwind_dbo_Categories>?> HandleGetByCategoryID(Int32 categoryID)
	{
		var retData = await _repository.GetByCategoryID(categoryID);
		return retData;
	}
	public async Task<Northwind_dbo_Categories?> HandleCreate(Northwind_dbo_Categories input)
	{
		var results = await _repository.Create(input);
		return results;
	}
	public async Task HandleUpdateByCategoryName(String categoryName, Northwind_dbo_Categories entity)
	{
		await _repository.UpdateByCategoryName(categoryName, entity);
	}
	public async Task HandleUpdateByCategoryID(Int32 categoryID, Northwind_dbo_Categories entity)
	{
		await _repository.UpdateByCategoryID(categoryID, entity);
	}
	public async Task HandleDeleteByCategoryName(String categoryName)
	{
		await _repository.DeleteByCategoryName(categoryName);
	}
	public async Task HandleDeleteByCategoryID(Int32 categoryID)
	{
		await _repository.DeleteByCategoryID(categoryID);
	}
}
