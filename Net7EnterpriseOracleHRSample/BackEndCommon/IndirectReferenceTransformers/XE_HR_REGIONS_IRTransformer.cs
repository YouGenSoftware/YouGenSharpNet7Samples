/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202958 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using XE_HR_BackEndSqlEntities.Entities;
using XE_HR_BackEndCommon.Services;
using XE_HR_Common.IndirectReferenceTransformerModels;
namespace XE_HR_BackEndCommon.IndirectReferenceTransformers;
public partial class IRTransformers : IIRTransformers
{
	public XE_HR_REGIONS_IR ToIndirectModel(XE_HR_REGIONS input, Boolean isSecondaryLookup = false)
	{
		var retData = new XE_HR_REGIONS_IR(
			rEGION_ID_IR_ : _encryptionDecryptionService!.EncInt32(input.REGION_ID),
			rEGION_NAME_ : input.REGION_NAME
			);
		if (!isSecondaryLookup && input.COUNTR_REG_FK_RefBy!.Any()) retData.COUNTR_REG_FK_RefBy_IR = input.COUNTR_REG_FK_RefBy!.Select(x => ToIndirectModel(x, true)).ToList()!;
			retData.PrimaryKeyHashedForUniqueObjectComparison = _encryptionDecryptionService!.CreateHash(retData.REGION_ID_IR);
		return retData;
	}
	public XE_HR_REGIONS ToEntity(XE_HR_REGIONS_IR input, Boolean isSecondaryLookup = false)
	{
		var retData = new XE_HR_REGIONS(		
			rEGION_ID_ : _encryptionDecryptionService.DecInt32(input.REGION_ID_IR),
			rEGION_NAME_ : input.REGION_NAME
			);
		return retData;
	}
}
