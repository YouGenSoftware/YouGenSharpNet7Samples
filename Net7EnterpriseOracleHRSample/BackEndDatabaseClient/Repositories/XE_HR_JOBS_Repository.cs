/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202958 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Enterprise Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using Z.EntityFramework.Plus;
using XE_HR_BackEndDatabaseClient;
using XE_HR_BackEndSqlEntities.Entities;
namespace XE_HR_BackEndDatabaseClient.Repositories;
public class XE_HR_JOBS_Repository : GenericTableRepository<XE_HR_JOBS>, IXE_HR_JOBS_Repository
{
    private readonly ILogger<XE_HR_JOBS_Repository> _logger;    
    public XE_HR_JOBS_Repository
    (
        ILogger<XE_HR_JOBS_Repository> logger
        ,XE_HR_Context dbContext
    ) : base(dbContext)
    {
        _logger = logger;
    }
	public async Task<IEnumerable<XE_HR_JOBS>?> GetByJOB_ID(String jOB_ID_)
	{
		return await _dbContext.XE_HR_JOBS!
			.Where(x => x.JOB_ID == jOB_ID_)
			.AsNoTracking()
			.ToListAsync();
	}
	public async Task UpdateByJOB_ID(String jOB_ID_, XE_HR_JOBS entity)
	{
		await _dbContext.XE_HR_JOBS!
			.Where(x => x.JOB_ID == jOB_ID_)
			.UpdateFromQueryAsync(x => new XE_HR_JOBS(){ JOB_TITLE = entity.JOB_TITLE, MIN_SALARY = entity.MIN_SALARY, MAX_SALARY = entity.MAX_SALARY });
	}
	public async Task DeleteByJOB_ID(String jOB_ID_)
	{
		await _dbContext.XE_HR_JOBS!
			.Where(x => x.JOB_ID == jOB_ID_)
			.DeleteFromQueryAsync();
	}
}
