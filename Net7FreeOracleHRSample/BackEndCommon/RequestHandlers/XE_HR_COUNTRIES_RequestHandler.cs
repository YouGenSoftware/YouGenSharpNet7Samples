/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202757 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Free Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use for evaluation purposes only. ****
**** This comment block must not be removed. ****
 */
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using XE_HR_BackEndDatabaseClient.Repositories;
using XE_HR_BackEndSqlEntities.Entities;
namespace XE_HR_BackEndCommon.RequestHandlers;
public class XE_HR_COUNTRIES_RequestHandler : IXE_HR_COUNTRIES_RequestHandler
{
    private readonly ILogger<XE_HR_COUNTRIES_RequestHandler> _logger;
    private readonly IXE_HR_COUNTRIES_Repository _repository;
    public XE_HR_COUNTRIES_RequestHandler(
    ILogger<XE_HR_COUNTRIES_RequestHandler> logger
    ,IXE_HR_COUNTRIES_Repository repository)
    {
        _logger = logger;
        _repository = repository;
    }
	//Main Handlers
	public async Task<IEnumerable<XE_HR_COUNTRIES>?> HandleGetAll()
	{
		var retData = await _repository.GetAll();
		return retData;
	}
	public async Task<IEnumerable<XE_HR_COUNTRIES>?> HandleGetByCOUNTRY_ID(String cOUNTRY_ID)
	{
		var retData = await _repository.GetByCOUNTRY_ID(cOUNTRY_ID);
		return retData;
	}
	public async Task<XE_HR_COUNTRIES?> HandleCreate(XE_HR_COUNTRIES input)
	{
		var results = await _repository.Create(input);
		return results;
	}
	public async Task HandleUpdateByCOUNTRY_ID(String cOUNTRY_ID, XE_HR_COUNTRIES entity)
	{
		await _repository.UpdateByCOUNTRY_ID(cOUNTRY_ID, entity);
	}
	public async Task HandleDeleteByCOUNTRY_ID(String cOUNTRY_ID)
	{
		await _repository.DeleteByCOUNTRY_ID(cOUNTRY_ID);
	}
}
