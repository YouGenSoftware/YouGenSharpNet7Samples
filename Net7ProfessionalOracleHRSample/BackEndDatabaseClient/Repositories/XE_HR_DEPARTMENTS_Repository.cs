/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202926 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using Z.EntityFramework.Plus;
using XE_HR_BackEndDatabaseClient;
using XE_HR_BackEndSqlEntities.Entities;
namespace XE_HR_BackEndDatabaseClient.Repositories;
public class XE_HR_DEPARTMENTS_Repository : GenericTableRepository<XE_HR_DEPARTMENTS>, IXE_HR_DEPARTMENTS_Repository
{
    private readonly ILogger<XE_HR_DEPARTMENTS_Repository> _logger;    
    public XE_HR_DEPARTMENTS_Repository
    (
        ILogger<XE_HR_DEPARTMENTS_Repository> logger
        ,XE_HR_Context dbContext
    ) : base(dbContext)
    {
        _logger = logger;
    }
	public async Task<IEnumerable<XE_HR_DEPARTMENTS>?> GetByDEPARTMENT_ID(Int32 dEPARTMENT_ID_)
	{
		return await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.DEPARTMENT_ID == dEPARTMENT_ID_)
			.Include(x => x.DEPT_LOC_FK_Ref)
			.Include(x => x.DEPT_MGR_FK_Ref)
			.AsNoTracking()
			.ToListAsync();
	}
	public async Task<IEnumerable<XE_HR_DEPARTMENTS>?> GetByLOCATION_ID(Int32? lOCATION_ID_)
	{
		return await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.LOCATION_ID == lOCATION_ID_)
			.Include(x => x.DEPT_LOC_FK_Ref)
			.Include(x => x.DEPT_MGR_FK_Ref)
			.AsNoTracking()
			.ToListAsync();
	}
	public async Task UpdateByDEPARTMENT_ID(Int32 dEPARTMENT_ID_, XE_HR_DEPARTMENTS entity)
	{
		await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.DEPARTMENT_ID == dEPARTMENT_ID_)
			.UpdateFromQueryAsync(x => new XE_HR_DEPARTMENTS(){ DEPARTMENT_NAME = entity.DEPARTMENT_NAME, MANAGER_ID = entity.MANAGER_ID, LOCATION_ID = entity.LOCATION_ID });
	}
	public async Task UpdateByLOCATION_ID(Int32? lOCATION_ID_, XE_HR_DEPARTMENTS entity)
	{
		await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.LOCATION_ID == lOCATION_ID_)
			.UpdateFromQueryAsync(x => new XE_HR_DEPARTMENTS(){ DEPARTMENT_NAME = entity.DEPARTMENT_NAME, MANAGER_ID = entity.MANAGER_ID, LOCATION_ID = entity.LOCATION_ID });
	}
	public async Task DeleteByDEPARTMENT_ID(Int32 dEPARTMENT_ID_)
	{
		await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.DEPARTMENT_ID == dEPARTMENT_ID_)
			.DeleteFromQueryAsync();
	}
	public async Task DeleteByLOCATION_ID(Int32? lOCATION_ID_)
	{
		await _dbContext.XE_HR_DEPARTMENTS!
			.Where(x => x.LOCATION_ID == lOCATION_ID_)
			.DeleteFromQueryAsync();
	}
}
