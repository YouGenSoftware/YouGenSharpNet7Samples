/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202926 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
const controllerRoute = '/XE_HR_DEPARTMENTS';
async function XE_HR_DEPARTMENTS_IR_GetAll() {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'GetAll';
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_GetByDEPARTMENT_ID(DEPARTMENT_ID_IR) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'GetByDEPARTMENT_ID?' + GetUriForParamsForDEPARTMENT_ID(DEPARTMENT_ID_IR);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_GetByLOCATION_ID(LOCATION_ID_IR) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'GetByLOCATION_ID?' + GetUriForParamsForLOCATION_ID(LOCATION_ID_IR);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_Create(input) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'Create';
	config.method = 'post';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_UpdateByDEPARTMENT_ID(DEPARTMENT_ID_IR,input) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'UpdateByDEPARTMENT_ID?' + GetUriForParamsForDEPARTMENT_ID(DEPARTMENT_ID_IR);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_UpdateByLOCATION_ID(LOCATION_ID_IR,input) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'UpdateByLOCATION_ID?' + GetUriForParamsForLOCATION_ID(LOCATION_ID_IR);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_DeleteByDEPARTMENT_ID(DEPARTMENT_ID_IR) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'DeleteByDEPARTMENT_ID?' + GetUriForParamsForDEPARTMENT_ID(DEPARTMENT_ID_IR);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function XE_HR_DEPARTMENTS_IR_DeleteByLOCATION_ID(LOCATION_ID_IR) {
	let config = {};
	config.baseURL = baseUrl_XE_HR + controllerRoute;
	config.url = 'DeleteByLOCATION_ID?' + GetUriForParamsForLOCATION_ID(LOCATION_ID_IR);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
function GetUriForParamsForDEPARTMENT_ID(DEPARTMENT_ID_IR) {
	const urlParams = new URLSearchParams({
		"DEPARTMENT_ID_IR": DEPARTMENT_ID_IR
	});
	return urlParams.toString();
}
function GetUriForParamsForLOCATION_ID(LOCATION_ID_IR) {
	const urlParams = new URLSearchParams({
		"LOCATION_ID_IR": LOCATION_ID_IR
	});
	return urlParams.toString();
}
