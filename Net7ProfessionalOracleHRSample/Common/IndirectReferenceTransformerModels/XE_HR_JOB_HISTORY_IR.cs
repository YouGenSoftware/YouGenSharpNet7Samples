/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307202926 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Newtonsoft.Json;
namespace XE_HR_Common.IndirectReferenceTransformerModels;
/// <summary>
/// Sql Entity Description: Indirect Referenced Model Description: Table that stores job history of the employees. If an employee changes departments within the job or changes jobs within the department, new rows get inserted into this table with old job information of the employee. Contains a complex primary key: employee_id+start_date.Contains 25 rows. References with jobs, employees, and departments tables.
/// </summary>
public class XE_HR_JOB_HISTORY_IR
{
	public XE_HR_JOB_HISTORY_IR() 
	{
	} 
	public XE_HR_JOB_HISTORY_IR(
		String? eMPLOYEE_ID_IR_,
		DateTime? sTART_DATE_,
		DateTime? eND_DATE_,
		String? jOB_ID_,
		String? dEPARTMENT_ID_IR_
	)
	{
		_eMPLOYEE_ID_IR = eMPLOYEE_ID_IR_;
		EMPLOYEE_ID_IR_OriginalValue = eMPLOYEE_ID_IR_;
		_sTART_DATE = sTART_DATE_;
		START_DATE_OriginalValue = sTART_DATE_;
		_eND_DATE = eND_DATE_;
		END_DATE_OriginalValue = eND_DATE_;
		_jOB_ID = jOB_ID_;
		JOB_ID_OriginalValue = jOB_ID_;
		_dEPARTMENT_ID_IR = dEPARTMENT_ID_IR_;
		DEPARTMENT_ID_IR_OriginalValue = dEPARTMENT_ID_IR_;
		PrimaryKeyEncryptedForUpdateDeleteIdentification = eMPLOYEE_ID_IR_ + (Char)27 + sTART_DATE_.ToString();
	}
	[JsonConstructor]
	public XE_HR_JOB_HISTORY_IR(
		String? EMPLOYEE_ID_IR,
		String? EMPLOYEE_ID_IR_OriginalValue,
		Boolean EMPLOYEE_ID_IR_HasBeenChanged,
		DateTime START_DATE,
		DateTime START_DATE_OriginalValue,
		Boolean START_DATE_HasBeenChanged,
		DateTime END_DATE,
		DateTime END_DATE_OriginalValue,
		Boolean END_DATE_HasBeenChanged,
		String JOB_ID,
		String JOB_ID_OriginalValue,
		Boolean JOB_ID_HasBeenChanged,
		String? DEPARTMENT_ID_IR,
		String? DEPARTMENT_ID_IR_OriginalValue,
		Boolean DEPARTMENT_ID_IR_HasBeenChanged,
		String? PrimaryKeyEncryptedForUpdateDeleteIdentification,
		String? PrimaryKeyHashedForUniqueObjectComparison
	)
	{
		this.EMPLOYEE_ID_IR = EMPLOYEE_ID_IR;
		this.EMPLOYEE_ID_IR_OriginalValue = EMPLOYEE_ID_IR_OriginalValue;
		this.EMPLOYEE_ID_IR_HasBeenChanged = EMPLOYEE_ID_IR_HasBeenChanged;
		this.START_DATE = START_DATE;
		this.START_DATE_OriginalValue = START_DATE_OriginalValue;
		this.START_DATE_HasBeenChanged = START_DATE_HasBeenChanged;
		this.END_DATE = END_DATE;
		this.END_DATE_OriginalValue = END_DATE_OriginalValue;
		this.END_DATE_HasBeenChanged = END_DATE_HasBeenChanged;
		this.JOB_ID = JOB_ID;
		this.JOB_ID_OriginalValue = JOB_ID_OriginalValue;
		this.JOB_ID_HasBeenChanged = JOB_ID_HasBeenChanged;
		this.DEPARTMENT_ID_IR = DEPARTMENT_ID_IR;
		this.DEPARTMENT_ID_IR_OriginalValue = DEPARTMENT_ID_IR_OriginalValue;
		this.DEPARTMENT_ID_IR_HasBeenChanged = DEPARTMENT_ID_IR_HasBeenChanged;
		this.PrimaryKeyEncryptedForUpdateDeleteIdentification = PrimaryKeyEncryptedForUpdateDeleteIdentification;
		this.PrimaryKeyHashedForUniqueObjectComparison = PrimaryKeyHashedForUniqueObjectComparison;
	}
	/// <summary>
	/// SQL Column Description: Primary key encrypted value for update and delete identification purposes
	/// </summary>
	public String? PrimaryKeyEncryptedForUpdateDeleteIdentification { get; set; }
	/// <summary>
	/// SQL Column Description: Primary key hashed value for uniue object comparison purposes
	/// </summary>
	public String? PrimaryKeyHashedForUniqueObjectComparison { get; set; }
	/// <summary>
	/// SQL Column Description: A not null column in the complex primary key employee_id+start_date.Foreign key to employee_id column of the employee table
	/// </summary>
	public String? EMPLOYEE_ID_IR
	{
		get => _eMPLOYEE_ID_IR;
		set
		{
			_eMPLOYEE_ID_IR = value;
			EMPLOYEE_ID_IR_HasBeenChanged = _eMPLOYEE_ID_IR == EMPLOYEE_ID_IR_OriginalValue ? false : true;
		}
	}
	private String? _eMPLOYEE_ID_IR;
	public String? EMPLOYEE_ID_IR_OriginalValue { get; private set; }
	public Boolean EMPLOYEE_ID_IR_HasBeenChanged { get; private set; }
	/// <summary>
	/// SQL Column Description: A not null column in the complex primary key employee_id+start_date. Must be less than the end_date of the job_history table. (enforced by constraint jhist_date_interval)
	/// </summary>
	public DateTime? START_DATE
	{
		get => _sTART_DATE;
		set
		{
			_sTART_DATE = value;
			START_DATE_HasBeenChanged = _sTART_DATE == START_DATE_OriginalValue ? false : true;
		}
	}
	private DateTime? _sTART_DATE;
	public DateTime? START_DATE_OriginalValue  { get; private set; }
	public Boolean START_DATE_HasBeenChanged  { get; private set; }
	/// <summary>
	/// SQL Column Description: Last day of the employee in this job role. A not null column. Must be greater than the start_date of the job_history table. (enforced by constraint jhist_date_interval)
	/// </summary>
	public DateTime? END_DATE
	{
		get => _eND_DATE;
		set
		{
			_eND_DATE = value;
			END_DATE_HasBeenChanged = _eND_DATE == END_DATE_OriginalValue ? false : true;
		}
	}
	private DateTime? _eND_DATE;
	public DateTime? END_DATE_OriginalValue  { get; private set; }
	public Boolean END_DATE_HasBeenChanged  { get; private set; }
	/// <summary>
	/// SQL Column Description: Job role in which the employee worked in the past; foreign key to job_id column in the jobs table. A not null column.
	/// </summary>
	public String? JOB_ID
	{
		get => _jOB_ID;
		set
		{
			_jOB_ID = value;
			JOB_ID_HasBeenChanged = _jOB_ID == JOB_ID_OriginalValue ? false : true;
		}
	}
	private String? _jOB_ID;
	public String? JOB_ID_OriginalValue  { get; private set; }
	public Boolean JOB_ID_HasBeenChanged  { get; private set; }
	/// <summary>
	/// SQL Column Description: Department id in which the employee worked in the past; foreign key to deparment_id column in the departments table
	/// </summary>
	public String? DEPARTMENT_ID_IR
	{
		get => _dEPARTMENT_ID_IR;
		set
		{
			_dEPARTMENT_ID_IR = value;
			DEPARTMENT_ID_IR_HasBeenChanged = _dEPARTMENT_ID_IR == DEPARTMENT_ID_IR_OriginalValue ? false : true;
		}
	}
	private String? _dEPARTMENT_ID_IR;
	public String? DEPARTMENT_ID_IR_OriginalValue { get; private set; }
	public Boolean DEPARTMENT_ID_IR_HasBeenChanged { get; private set; }
	// Foreign key entities
	public virtual XE_HR_DEPARTMENTS_IR? JHIST_DEPT_FK_Ref_IR { get; set; }
	public virtual XE_HR_EMPLOYEES_IR? JHIST_EMP_FK_Ref_IR { get; set; }
	public virtual XE_HR_JOBS_IR? JHIST_JOB_FK_Ref_IR { get; set; }
	/// <summary>
	/// Foreign key entity
	/// </summary>
	/// <example>null</example>
	/// <summary>
	/// Foreign key entity
	/// </summary>
	/// <example>null</example>
	/// <summary>
	/// Foreign key entity
	/// </summary>
	/// <example>null</example>
}
