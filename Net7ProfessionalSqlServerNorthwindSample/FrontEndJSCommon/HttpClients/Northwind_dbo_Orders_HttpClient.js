/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200541 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
const controllerRoute = '/Northwind_dbo_Orders';
async function Northwind_dbo_Orders_IR_GetAll() {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetAll';
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByCustomerID(CustomerID) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByCustomerID?' + GetUriForParamsForCustomerID(CustomerID);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByEmployeeID(EmployeeID_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByEmployeeID?' + GetUriForParamsForEmployeeID(EmployeeID_IR);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByOrderDate(OrderDate) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByOrderDate?' + GetUriForParamsForOrderDate(OrderDate);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByOrderID(OrderID_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByOrderID?' + GetUriForParamsForOrderID(OrderID_IR);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByShippedDate(ShippedDate) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByShippedDate?' + GetUriForParamsForShippedDate(ShippedDate);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByShipVia(ShipVia_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByShipVia?' + GetUriForParamsForShipVia(ShipVia_IR);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_GetByShipPostalCode(ShipPostalCode) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'GetByShipPostalCode?' + GetUriForParamsForShipPostalCode(ShipPostalCode);
	config.method = 'get';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_Create(input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'Create';
	config.method = 'post';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByCustomerID(CustomerID,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByCustomerID?' + GetUriForParamsForCustomerID(CustomerID);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByEmployeeID(EmployeeID_IR,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByEmployeeID?' + GetUriForParamsForEmployeeID(EmployeeID_IR);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByOrderDate(OrderDate,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByOrderDate?' + GetUriForParamsForOrderDate(OrderDate);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByOrderID(OrderID_IR,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByOrderID?' + GetUriForParamsForOrderID(OrderID_IR);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByShippedDate(ShippedDate,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByShippedDate?' + GetUriForParamsForShippedDate(ShippedDate);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByShipVia(ShipVia_IR,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByShipVia?' + GetUriForParamsForShipVia(ShipVia_IR);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_UpdateByShipPostalCode(ShipPostalCode,input) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'UpdateByShipPostalCode?' + GetUriForParamsForShipPostalCode(ShipPostalCode);
	config.method = 'put';
	config.data = input;
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByCustomerID(CustomerID) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByCustomerID?' + GetUriForParamsForCustomerID(CustomerID);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByEmployeeID(EmployeeID_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByEmployeeID?' + GetUriForParamsForEmployeeID(EmployeeID_IR);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByOrderDate(OrderDate) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByOrderDate?' + GetUriForParamsForOrderDate(OrderDate);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByOrderID(OrderID_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByOrderID?' + GetUriForParamsForOrderID(OrderID_IR);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByShippedDate(ShippedDate) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByShippedDate?' + GetUriForParamsForShippedDate(ShippedDate);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByShipVia(ShipVia_IR) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByShipVia?' + GetUriForParamsForShipVia(ShipVia_IR);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
async function Northwind_dbo_Orders_IR_DeleteByShipPostalCode(ShipPostalCode) {
	let config = {};
	config.baseURL = baseUrl_Northwind + controllerRoute;
	config.url = 'DeleteByShipPostalCode?' + GetUriForParamsForShipPostalCode(ShipPostalCode);
	config.method = 'delete';
	try {
		let response = await axios.request(config);
		// console.log(response);
		// process response
	} catch (error) {
		// console.log(error);
	}
}
function GetUriForParamsForCustomerID(CustomerID) {
	const urlParams = new URLSearchParams({
		"CustomerID": CustomerID
	});
	return urlParams.toString();
}
function GetUriForParamsForEmployeeID(EmployeeID_IR) {
	const urlParams = new URLSearchParams({
		"EmployeeID_IR": EmployeeID_IR
	});
	return urlParams.toString();
}
function GetUriForParamsForOrderDate(OrderDate) {
	const urlParams = new URLSearchParams({
		"OrderDate": OrderDate
	});
	return urlParams.toString();
}
function GetUriForParamsForOrderID(OrderID_IR) {
	const urlParams = new URLSearchParams({
		"OrderID_IR": OrderID_IR
	});
	return urlParams.toString();
}
function GetUriForParamsForShippedDate(ShippedDate) {
	const urlParams = new URLSearchParams({
		"ShippedDate": ShippedDate
	});
	return urlParams.toString();
}
function GetUriForParamsForShipVia(ShipVia_IR) {
	const urlParams = new URLSearchParams({
		"ShipVia_IR": ShipVia_IR
	});
	return urlParams.toString();
}
function GetUriForParamsForShipPostalCode(ShipPostalCode) {
	const urlParams = new URLSearchParams({
		"ShipPostalCode": ShipPostalCode
	});
	return urlParams.toString();
}
