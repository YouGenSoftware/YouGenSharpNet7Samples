/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200541 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Northwind_BackEndSqlEntities.Entities;
using Northwind_BackEndCommon.Services;
using Northwind_Common.IndirectReferenceTransformerModels;
namespace Northwind_BackEndCommon.IndirectReferenceTransformers;
public partial class IRTransformers : IIRTransformers
{
	public Northwind_dbo_Products_IR ToIndirectModel(Northwind_dbo_Products input, Boolean isSecondaryLookup = false)
	{
		var retData = new Northwind_dbo_Products_IR(
			productID_IR_ : _encryptionDecryptionService!.EncInt32(input.ProductID),
			productName_ : input.ProductName,
			supplierID_IR_ : _encryptionDecryptionService!.EncInt32Nullable(input.SupplierID),
			categoryID_IR_ : _encryptionDecryptionService!.EncInt32Nullable(input.CategoryID),
			quantityPerUnit_ : input.QuantityPerUnit,
			unitPrice_ : input.UnitPrice,
			unitsInStock_ : input.UnitsInStock,
			unitsOnOrder_ : input.UnitsOnOrder,
			reorderLevel_ : input.ReorderLevel,
			discontinued_ : input.Discontinued
			);
		if (input.FK_Products_Categories_Ref != null) retData.FK_Products_Categories_Ref_IR = ToIndirectModel(input.FK_Products_Categories_Ref!, true);
		if (input.FK_Products_Suppliers_Ref != null) retData.FK_Products_Suppliers_Ref_IR = ToIndirectModel(input.FK_Products_Suppliers_Ref!, true);
		if (!isSecondaryLookup && input.FK_Order_Details_Products_RefBy!.Any()) retData.FK_Order_Details_Products_RefBy_IR = input.FK_Order_Details_Products_RefBy!.Select(x => ToIndirectModel(x, true)).ToList()!;
			retData.PrimaryKeyHashedForUniqueObjectComparison = _encryptionDecryptionService!.CreateHash(retData.ProductID_IR);
		return retData;
	}
	public Northwind_dbo_Products ToEntity(Northwind_dbo_Products_IR input, Boolean isSecondaryLookup = false)
	{
		var retData = new Northwind_dbo_Products(		
			productID_ : _encryptionDecryptionService.DecInt32(input.ProductID_IR),
			productName_ : input.ProductName ?? String.Empty,
			supplierID_ : _encryptionDecryptionService.DecInt32Nullable(input.SupplierID_IR),
			categoryID_ : _encryptionDecryptionService.DecInt32Nullable(input.CategoryID_IR),
			quantityPerUnit_ : input.QuantityPerUnit,
			unitPrice_ : input.UnitPrice,
			unitsInStock_ : input.UnitsInStock,
			unitsOnOrder_ : input.UnitsOnOrder,
			reorderLevel_ : input.ReorderLevel,
			discontinued_ : input.Discontinued ?? default
			);
		if (input.FK_Products_Categories_Ref_IR != null) retData.FK_Products_Categories_Ref = ToEntity(input.FK_Products_Categories_Ref_IR!, true);
		if (input.FK_Products_Suppliers_Ref_IR != null) retData.FK_Products_Suppliers_Ref = ToEntity(input.FK_Products_Suppliers_Ref_IR!, true);
		return retData;
	}
}
