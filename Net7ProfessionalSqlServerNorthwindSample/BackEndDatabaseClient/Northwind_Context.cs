/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200541 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Northwind_BackEndSqlEntities.Entities;
namespace Northwind_BackEndDatabaseClient;
public partial class Northwind_Context : DbContext
{
    public Northwind_Context()
    {
    }
    public Northwind_Context(DbContextOptions<Northwind_Context> options) : base(options)
    {
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
    }
    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    //DbSets
	public virtual DbSet<Northwind_dbo_Categories>?Northwind_dbo_Categories { get; set; }
	public virtual DbSet<Northwind_dbo_CustomerCustomerDemo>?Northwind_dbo_CustomerCustomerDemo { get; set; }
	public virtual DbSet<Northwind_dbo_CustomerDemographics>?Northwind_dbo_CustomerDemographics { get; set; }
	public virtual DbSet<Northwind_dbo_Customers>?Northwind_dbo_Customers { get; set; }
	public virtual DbSet<Northwind_dbo_Employees>?Northwind_dbo_Employees { get; set; }
	public virtual DbSet<Northwind_dbo_EmployeeTerritories>?Northwind_dbo_EmployeeTerritories { get; set; }
	public virtual DbSet<Northwind_dbo_Order_Details>?Northwind_dbo_Order_Details { get; set; }
	public virtual DbSet<Northwind_dbo_Orders>?Northwind_dbo_Orders { get; set; }
	public virtual DbSet<Northwind_dbo_Products>?Northwind_dbo_Products { get; set; }
	public virtual DbSet<Northwind_dbo_Region>?Northwind_dbo_Region { get; set; }
	public virtual DbSet<Northwind_dbo_Shippers>?Northwind_dbo_Shippers { get; set; }
	public virtual DbSet<Northwind_dbo_Suppliers>?Northwind_dbo_Suppliers { get; set; }
	public virtual DbSet<Northwind_dbo_Territories>?Northwind_dbo_Territories { get; set; }
	public virtual DbSet<Northwind_dbo_Alphabetical_list_of_products>?Northwind_dbo_Alphabetical_list_of_products { get; set; }
	public virtual DbSet<Northwind_dbo_Category_Sales_for_1997>?Northwind_dbo_Category_Sales_for_1997 { get; set; }
	public virtual DbSet<Northwind_dbo_Current_Product_List>?Northwind_dbo_Current_Product_List { get; set; }
	public virtual DbSet<Northwind_dbo_Customer_and_Suppliers_by_City>?Northwind_dbo_Customer_and_Suppliers_by_City { get; set; }
	public virtual DbSet<Northwind_dbo_Invoices>?Northwind_dbo_Invoices { get; set; }
	public virtual DbSet<Northwind_dbo_Order_Details_Extended>?Northwind_dbo_Order_Details_Extended { get; set; }
	public virtual DbSet<Northwind_dbo_Order_Subtotals>?Northwind_dbo_Order_Subtotals { get; set; }
	public virtual DbSet<Northwind_dbo_Orders_Qry>?Northwind_dbo_Orders_Qry { get; set; }
	public virtual DbSet<Northwind_dbo_Product_Sales_for_1997>?Northwind_dbo_Product_Sales_for_1997 { get; set; }
	public virtual DbSet<Northwind_dbo_Products_Above_Average_Price>?Northwind_dbo_Products_Above_Average_Price { get; set; }
	public virtual DbSet<Northwind_dbo_Products_by_Category>?Northwind_dbo_Products_by_Category { get; set; }
	public virtual DbSet<Northwind_dbo_Quarterly_Orders>?Northwind_dbo_Quarterly_Orders { get; set; }
	public virtual DbSet<Northwind_dbo_Sales_by_Category>?Northwind_dbo_Sales_by_Category { get; set; }
	public virtual DbSet<Northwind_dbo_Sales_Totals_by_Amount>?Northwind_dbo_Sales_Totals_by_Amount { get; set; }
	public virtual DbSet<Northwind_dbo_Summary_of_Sales_by_Quarter>?Northwind_dbo_Summary_of_Sales_by_Quarter { get; set; }
	public virtual DbSet<Northwind_dbo_Summary_of_Sales_by_Year>?Northwind_dbo_Summary_of_Sales_by_Year { get; set; }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
		modelBuilder.Entity<Northwind_dbo_Categories>(entity =>
		{
			entity.ToTable("Categories", "dbo");
			entity.HasKey(e => new { e.CategoryID })
				.HasName("PK_Categories");
			entity.HasIndex(e => new { e.CategoryName }, "CategoryName");
			entity.HasIndex(e => new { e.CategoryID }, "PK_Categories")
				.IsUnique();
			entity.Property(e => e.CategoryID)
				.HasColumnName("CategoryID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Description)
				.HasColumnName("Description")
				.HasColumnType("ntext")
				.HasMaxLength(1073741823)
				.IsUnicode();
			entity.Property(e => e.Picture)
				.HasColumnName("Picture")
				.HasColumnType("image");
		});
		modelBuilder.Entity<Northwind_dbo_CustomerCustomerDemo>(entity =>
		{
			entity.ToTable("CustomerCustomerDemo", "dbo");
			entity.HasKey(e => new { e.CustomerID, e.CustomerTypeID })
				.HasName("PK_CustomerCustomerDemo");
			entity.HasIndex(e => new { e.CustomerID, e.CustomerTypeID }, "PK_CustomerCustomerDemo")
				.IsUnique();
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.CustomerTypeID)
				.HasColumnName("CustomerTypeID")
				.HasColumnType("nchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.HasOne(d => d.FK_CustomerCustomerDemo_Ref)
				.WithMany(p => p.FK_CustomerCustomerDemo_RefBy)
				.HasForeignKey(d => new { d.CustomerTypeID })
				.HasConstraintName("FK_CustomerCustomerDemo_Ref");
			entity.HasOne(d => d.FK_CustomerCustomerDemo_Customers_Ref)
				.WithMany(p => p.FK_CustomerCustomerDemo_Customers_RefBy)
				.HasForeignKey(d => new { d.CustomerID })
				.HasConstraintName("FK_CustomerCustomerDemo_Customers_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_CustomerDemographics>(entity =>
		{
			entity.ToTable("CustomerDemographics", "dbo");
			entity.HasKey(e => new { e.CustomerTypeID })
				.HasName("PK_CustomerDemographics");
			entity.HasIndex(e => new { e.CustomerTypeID }, "PK_CustomerDemographics")
				.IsUnique();
			entity.Property(e => e.CustomerTypeID)
				.HasColumnName("CustomerTypeID")
				.HasColumnType("nchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.CustomerDesc)
				.HasColumnName("CustomerDesc")
				.HasColumnType("ntext")
				.HasMaxLength(1073741823)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Customers>(entity =>
		{
			entity.ToTable("Customers", "dbo");
			entity.HasKey(e => new { e.CustomerID })
				.HasName("PK_Customers");
			entity.HasIndex(e => new { e.City }, "City");
			entity.HasIndex(e => new { e.CompanyName }, "CompanyName");
			entity.HasIndex(e => new { e.CustomerID }, "PK_Customers")
				.IsUnique();
			entity.HasIndex(e => new { e.PostalCode }, "PostalCode");
			entity.HasIndex(e => new { e.Region }, "Region");
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ContactName)
				.HasColumnName("ContactName")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.ContactTitle)
				.HasColumnName("ContactTitle")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.Address)
				.HasColumnName("Address")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Region)
				.HasColumnName("Region")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.PostalCode)
				.HasColumnName("PostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Phone)
				.HasColumnName("Phone")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
			entity.Property(e => e.Fax)
				.HasColumnName("Fax")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Employees>(entity =>
		{
			entity.ToTable("Employees", "dbo");
			entity.HasKey(e => new { e.EmployeeID })
				.HasName("PK_Employees");
			entity.HasIndex(e => new { e.LastName }, "LastName");
			entity.HasIndex(e => new { e.EmployeeID }, "PK_Employees")
				.IsUnique();
			entity.HasIndex(e => new { e.PostalCode }, "PostalCode");
			entity.Property(e => e.EmployeeID)
				.HasColumnName("EmployeeID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.LastName)
				.HasColumnName("LastName")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.Property(e => e.FirstName)
				.HasColumnName("FirstName")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Title)
				.HasColumnName("Title")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.TitleOfCourtesy)
				.HasColumnName("TitleOfCourtesy")
				.HasColumnType("nvarchar")
				.HasMaxLength(25)
				.IsUnicode();
			entity.Property(e => e.BirthDate)
				.HasColumnName("BirthDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.HireDate)
				.HasColumnName("HireDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.Address)
				.HasColumnName("Address")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Region)
				.HasColumnName("Region")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.PostalCode)
				.HasColumnName("PostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.HomePhone)
				.HasColumnName("HomePhone")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
			entity.Property(e => e.Extension)
				.HasColumnName("Extension")
				.HasColumnType("nvarchar")
				.HasMaxLength(4)
				.IsUnicode();
			entity.Property(e => e.Photo)
				.HasColumnName("Photo")
				.HasColumnType("image");
			entity.Property(e => e.Notes)
				.HasColumnName("Notes")
				.HasColumnType("ntext")
				.HasMaxLength(1073741823)
				.IsUnicode();
			entity.Property(e => e.ReportsTo)
				.HasColumnName("ReportsTo")
				.HasColumnType("int");
			entity.Property(e => e.PhotoPath)
				.HasColumnName("PhotoPath")
				.HasColumnType("nvarchar")
				.HasMaxLength(255)
				.IsUnicode();
			entity.HasOne(d => d.FK_Employees_Employees_Ref)
				.WithMany(p => p.FK_Employees_Employees_RefBy)
				.HasForeignKey(d => new { d.ReportsTo })
				.HasConstraintName("FK_Employees_Employees_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_EmployeeTerritories>(entity =>
		{
			entity.ToTable("EmployeeTerritories", "dbo");
			entity.HasKey(e => new { e.EmployeeID, e.TerritoryID })
				.HasName("PK_EmployeeTerritories");
			entity.HasIndex(e => new { e.EmployeeID, e.TerritoryID }, "PK_EmployeeTerritories")
				.IsUnique();
			entity.Property(e => e.EmployeeID)
				.HasColumnName("EmployeeID")
				.HasColumnType("int");
			entity.Property(e => e.TerritoryID)
				.HasColumnName("TerritoryID")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.HasOne(d => d.FK_EmployeeTerritories_Employees_Ref)
				.WithMany(p => p.FK_EmployeeTerritories_Employees_RefBy)
				.HasForeignKey(d => new { d.EmployeeID })
				.HasConstraintName("FK_EmployeeTerritories_Employees_Ref");
			entity.HasOne(d => d.FK_EmployeeTerritories_Territories_Ref)
				.WithMany(p => p.FK_EmployeeTerritories_Territories_RefBy)
				.HasForeignKey(d => new { d.TerritoryID })
				.HasConstraintName("FK_EmployeeTerritories_Territories_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_Order_Details>(entity =>
		{
			entity.ToTable("Order Details", "dbo");
			entity.HasKey(e => new { e.OrderID, e.ProductID })
				.HasName("PK_Order_Details");
			entity.HasIndex(e => new { e.OrderID, e.ProductID }, "PK_Order_Details")
				.IsUnique();
			entity.HasIndex(e => new { e.OrderID }, "OrderID");
			entity.HasIndex(e => new { e.ProductID }, "ProductID");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int");
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.Quantity)
				.HasColumnName("Quantity")
				.HasColumnType("smallint")
				.HasDefaultValueSql("((1))");
			entity.Property(e => e.Discount)
				.HasColumnName("Discount")
				.HasColumnType("real")
				.HasDefaultValueSql("((0))");
			entity.HasOne(d => d.FK_Order_Details_Orders_Ref)
				.WithMany(p => p.FK_Order_Details_Orders_RefBy)
				.HasForeignKey(d => new { d.OrderID })
				.HasConstraintName("FK_Order_Details_Orders_Ref");
			entity.HasOne(d => d.FK_Order_Details_Products_Ref)
				.WithMany(p => p.FK_Order_Details_Products_RefBy)
				.HasForeignKey(d => new { d.ProductID })
				.HasConstraintName("FK_Order_Details_Products_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_Orders>(entity =>
		{
			entity.ToTable("Orders", "dbo");
			entity.HasKey(e => new { e.OrderID })
				.HasName("PK_Orders");
			entity.HasIndex(e => new { e.CustomerID }, "CustomerID");
			entity.HasIndex(e => new { e.EmployeeID }, "EmployeeID");
			entity.HasIndex(e => new { e.OrderDate }, "OrderDate");
			entity.HasIndex(e => new { e.OrderID }, "PK_Orders")
				.IsUnique();
			entity.HasIndex(e => new { e.ShippedDate }, "ShippedDate");
			entity.HasIndex(e => new { e.ShipVia }, "ShippersOrders");
			entity.HasIndex(e => new { e.ShipPostalCode }, "ShipPostalCode");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.EmployeeID)
				.HasColumnName("EmployeeID")
				.HasColumnType("int");
			entity.Property(e => e.OrderDate)
				.HasColumnName("OrderDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.RequiredDate)
				.HasColumnName("RequiredDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShipVia)
				.HasColumnName("ShipVia")
				.HasColumnType("int");
			entity.Property(e => e.Freight)
				.HasColumnName("Freight")
				.HasColumnType("money(19,4)")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.ShipName)
				.HasColumnName("ShipName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ShipAddress)
				.HasColumnName("ShipAddress")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.ShipCity)
				.HasColumnName("ShipCity")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipRegion)
				.HasColumnName("ShipRegion")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipPostalCode)
				.HasColumnName("ShipPostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.ShipCountry)
				.HasColumnName("ShipCountry")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.HasOne(d => d.FK_Orders_Customers_Ref)
				.WithMany(p => p.FK_Orders_Customers_RefBy)
				.HasForeignKey(d => new { d.CustomerID })
				.HasConstraintName("FK_Orders_Customers_Ref");
			entity.HasOne(d => d.FK_Orders_Employees_Ref)
				.WithMany(p => p.FK_Orders_Employees_RefBy)
				.HasForeignKey(d => new { d.EmployeeID })
				.HasConstraintName("FK_Orders_Employees_Ref");
			entity.HasOne(d => d.FK_Orders_Shippers_Ref)
				.WithMany(p => p.FK_Orders_Shippers_RefBy)
				.HasForeignKey(d => new { d.ShipVia })
				.HasConstraintName("FK_Orders_Shippers_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_Products>(entity =>
		{
			entity.ToTable("Products", "dbo");
			entity.HasKey(e => new { e.ProductID })
				.HasName("PK_Products");
			entity.HasIndex(e => new { e.CategoryID }, "CategoryID");
			entity.HasIndex(e => new { e.ProductID }, "PK_Products")
				.IsUnique();
			entity.HasIndex(e => new { e.ProductName }, "ProductName");
			entity.HasIndex(e => new { e.SupplierID }, "SupplierID");
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.SupplierID)
				.HasColumnName("SupplierID")
				.HasColumnType("int");
			entity.Property(e => e.CategoryID)
				.HasColumnName("CategoryID")
				.HasColumnType("int");
			entity.Property(e => e.QuantityPerUnit)
				.HasColumnName("QuantityPerUnit")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.UnitsInStock)
				.HasColumnName("UnitsInStock")
				.HasColumnType("smallint")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.UnitsOnOrder)
				.HasColumnName("UnitsOnOrder")
				.HasColumnType("smallint")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.ReorderLevel)
				.HasColumnName("ReorderLevel")
				.HasColumnType("smallint")
				.HasDefaultValueSql("((0))");
			entity.Property(e => e.Discontinued)
				.HasColumnName("Discontinued")
				.HasColumnType("bit")
				.HasDefaultValueSql("((0))");
			entity.HasOne(d => d.FK_Products_Categories_Ref)
				.WithMany(p => p.FK_Products_Categories_RefBy)
				.HasForeignKey(d => new { d.CategoryID })
				.HasConstraintName("FK_Products_Categories_Ref");
			entity.HasOne(d => d.FK_Products_Suppliers_Ref)
				.WithMany(p => p.FK_Products_Suppliers_RefBy)
				.HasForeignKey(d => new { d.SupplierID })
				.HasConstraintName("FK_Products_Suppliers_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_Region>(entity =>
		{
			entity.ToTable("Region", "dbo");
			entity.HasKey(e => new { e.RegionID })
				.HasName("PK_Region");
			entity.HasIndex(e => new { e.RegionID }, "PK_Region")
				.IsUnique();
			entity.Property(e => e.RegionID)
				.HasColumnName("RegionID")
				.HasColumnType("int");
			entity.Property(e => e.RegionDescription)
				.HasColumnName("RegionDescription")
				.HasColumnType("nchar")
				.HasMaxLength(50)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Shippers>(entity =>
		{
			entity.ToTable("Shippers", "dbo");
			entity.HasKey(e => new { e.ShipperID })
				.HasName("PK_Shippers");
			entity.HasIndex(e => new { e.ShipperID }, "PK_Shippers")
				.IsUnique();
			entity.Property(e => e.ShipperID)
				.HasColumnName("ShipperID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.Phone)
				.HasColumnName("Phone")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Suppliers>(entity =>
		{
			entity.ToTable("Suppliers", "dbo");
			entity.HasKey(e => new { e.SupplierID })
				.HasName("PK_Suppliers");
			entity.HasIndex(e => new { e.CompanyName }, "CompanyName");
			entity.HasIndex(e => new { e.SupplierID }, "PK_Suppliers")
				.IsUnique();
			entity.HasIndex(e => new { e.PostalCode }, "PostalCode");
			entity.Property(e => e.SupplierID)
				.HasColumnName("SupplierID")
				.HasColumnType("int")
				.ValueGeneratedOnAdd();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ContactName)
				.HasColumnName("ContactName")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.ContactTitle)
				.HasColumnName("ContactTitle")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.Address)
				.HasColumnName("Address")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Region)
				.HasColumnName("Region")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.PostalCode)
				.HasColumnName("PostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Phone)
				.HasColumnName("Phone")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
			entity.Property(e => e.Fax)
				.HasColumnName("Fax")
				.HasColumnType("nvarchar")
				.HasMaxLength(24)
				.IsUnicode();
			entity.Property(e => e.HomePage)
				.HasColumnName("HomePage")
				.HasColumnType("ntext")
				.HasMaxLength(1073741823)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Territories>(entity =>
		{
			entity.ToTable("Territories", "dbo");
			entity.HasKey(e => new { e.TerritoryID })
				.HasName("PK_Territories");
			entity.HasIndex(e => new { e.TerritoryID }, "PK_Territories")
				.IsUnique();
			entity.Property(e => e.TerritoryID)
				.HasColumnName("TerritoryID")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.Property(e => e.TerritoryDescription)
				.HasColumnName("TerritoryDescription")
				.HasColumnType("nchar")
				.HasMaxLength(50)
				.IsUnicode();
			entity.Property(e => e.RegionID)
				.HasColumnName("RegionID")
				.HasColumnType("int");
			entity.HasOne(d => d.FK_Territories_Region_Ref)
				.WithMany(p => p.FK_Territories_Region_RefBy)
				.HasForeignKey(d => new { d.RegionID })
				.HasConstraintName("FK_Territories_Region_Ref");
		});
		modelBuilder.Entity<Northwind_dbo_Alphabetical_list_of_products>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Alphabetical list of products", "dbo");
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int");
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.SupplierID)
				.HasColumnName("SupplierID")
				.HasColumnType("int");
			entity.Property(e => e.CategoryID)
				.HasColumnName("CategoryID")
				.HasColumnType("int");
			entity.Property(e => e.QuantityPerUnit)
				.HasColumnName("QuantityPerUnit")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.UnitsInStock)
				.HasColumnName("UnitsInStock")
				.HasColumnType("smallint");
			entity.Property(e => e.UnitsOnOrder)
				.HasColumnName("UnitsOnOrder")
				.HasColumnType("smallint");
			entity.Property(e => e.ReorderLevel)
				.HasColumnName("ReorderLevel")
				.HasColumnType("smallint");
			entity.Property(e => e.Discontinued)
				.HasColumnName("Discontinued")
				.HasColumnType("bit");
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Category_Sales_for_1997>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Category Sales for 1997", "dbo");
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.CategorySales)
				.HasColumnName("CategorySales")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Current_Product_List>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Current Product List", "dbo");
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int");
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Customer_and_Suppliers_by_City>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Customer and Suppliers by City", "dbo");
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ContactName)
				.HasColumnName("ContactName")
				.HasColumnType("nvarchar")
				.HasMaxLength(30)
				.IsUnicode();
			entity.Property(e => e.Relationship)
				.HasColumnName("Relationship")
				.HasColumnType("varchar")
				.HasMaxLength(9);
		});
		modelBuilder.Entity<Northwind_dbo_Invoices>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Invoices", "dbo");
			entity.Property(e => e.ShipName)
				.HasColumnName("ShipName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ShipAddress)
				.HasColumnName("ShipAddress")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.ShipCity)
				.HasColumnName("ShipCity")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipRegion)
				.HasColumnName("ShipRegion")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipPostalCode)
				.HasColumnName("ShipPostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.ShipCountry)
				.HasColumnName("ShipCountry")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.CustomerName)
				.HasColumnName("CustomerName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.Address)
				.HasColumnName("Address")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Region)
				.HasColumnName("Region")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.PostalCode)
				.HasColumnName("PostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Salesperson)
				.HasColumnName("Salesperson")
				.HasColumnType("nvarchar")
				.HasMaxLength(31)
				.IsUnicode();
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.OrderDate)
				.HasColumnName("OrderDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.RequiredDate)
				.HasColumnName("RequiredDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShipperName)
				.HasColumnName("ShipperName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int");
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.Quantity)
				.HasColumnName("Quantity")
				.HasColumnType("smallint");
			entity.Property(e => e.Discount)
				.HasColumnName("Discount")
				.HasColumnType("real");
			entity.Property(e => e.ExtendedPrice)
				.HasColumnName("ExtendedPrice")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.Freight)
				.HasColumnName("Freight")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Order_Details_Extended>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Order Details Extended", "dbo");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.ProductID)
				.HasColumnName("ProductID")
				.HasColumnType("int");
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.Quantity)
				.HasColumnName("Quantity")
				.HasColumnType("smallint");
			entity.Property(e => e.Discount)
				.HasColumnName("Discount")
				.HasColumnType("real");
			entity.Property(e => e.ExtendedPrice)
				.HasColumnName("ExtendedPrice")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Order_Subtotals>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Order Subtotals", "dbo");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.Subtotal)
				.HasColumnName("Subtotal")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Orders_Qry>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Orders Qry", "dbo");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.EmployeeID)
				.HasColumnName("EmployeeID")
				.HasColumnType("int");
			entity.Property(e => e.OrderDate)
				.HasColumnName("OrderDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.RequiredDate)
				.HasColumnName("RequiredDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.ShipVia)
				.HasColumnName("ShipVia")
				.HasColumnType("int");
			entity.Property(e => e.Freight)
				.HasColumnName("Freight")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.ShipName)
				.HasColumnName("ShipName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ShipAddress)
				.HasColumnName("ShipAddress")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.ShipCity)
				.HasColumnName("ShipCity")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipRegion)
				.HasColumnName("ShipRegion")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ShipPostalCode)
				.HasColumnName("ShipPostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.ShipCountry)
				.HasColumnName("ShipCountry")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.Address)
				.HasColumnName("Address")
				.HasColumnType("nvarchar")
				.HasMaxLength(60)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Region)
				.HasColumnName("Region")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.PostalCode)
				.HasColumnName("PostalCode")
				.HasColumnType("nvarchar")
				.HasMaxLength(10)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Product_Sales_for_1997>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Product Sales for 1997", "dbo");
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ProductSales)
				.HasColumnName("ProductSales")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Products_Above_Average_Price>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Products Above Average Price", "dbo");
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.UnitPrice)
				.HasColumnName("UnitPrice")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Products_by_Category>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Products by Category", "dbo");
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.QuantityPerUnit)
				.HasColumnName("QuantityPerUnit")
				.HasColumnType("nvarchar")
				.HasMaxLength(20)
				.IsUnicode();
			entity.Property(e => e.UnitsInStock)
				.HasColumnName("UnitsInStock")
				.HasColumnType("smallint");
			entity.Property(e => e.Discontinued)
				.HasColumnName("Discontinued")
				.HasColumnType("bit");
		});
		modelBuilder.Entity<Northwind_dbo_Quarterly_Orders>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Quarterly Orders", "dbo");
			entity.Property(e => e.CustomerID)
				.HasColumnName("CustomerID")
				.HasColumnType("nchar")
				.HasMaxLength(5)
				.IsUnicode();
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.City)
				.HasColumnName("City")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.Country)
				.HasColumnName("Country")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
		});
		modelBuilder.Entity<Northwind_dbo_Sales_by_Category>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Sales by Category", "dbo");
			entity.Property(e => e.CategoryID)
				.HasColumnName("CategoryID")
				.HasColumnType("int");
			entity.Property(e => e.CategoryName)
				.HasColumnName("CategoryName")
				.HasColumnType("nvarchar")
				.HasMaxLength(15)
				.IsUnicode();
			entity.Property(e => e.ProductName)
				.HasColumnName("ProductName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ProductSales)
				.HasColumnName("ProductSales")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Sales_Totals_by_Amount>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Sales Totals by Amount", "dbo");
			entity.Property(e => e.SaleAmount)
				.HasColumnName("SaleAmount")
				.HasColumnType("money(19,4)");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.CompanyName)
				.HasColumnName("CompanyName")
				.HasColumnType("nvarchar")
				.HasMaxLength(40)
				.IsUnicode();
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
		});
		modelBuilder.Entity<Northwind_dbo_Summary_of_Sales_by_Quarter>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Summary of Sales by Quarter", "dbo");
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.Subtotal)
				.HasColumnName("Subtotal")
				.HasColumnType("money(19,4)");
		});
		modelBuilder.Entity<Northwind_dbo_Summary_of_Sales_by_Year>(entity =>
		{
			entity.HasNoKey();
			entity.ToView("Summary of Sales by Year", "dbo");
			entity.Property(e => e.ShippedDate)
				.HasColumnName("ShippedDate")
				.HasColumnType("datetime(3)");
			entity.Property(e => e.OrderID)
				.HasColumnName("OrderID")
				.HasColumnType("int");
			entity.Property(e => e.Subtotal)
				.HasColumnName("Subtotal")
				.HasColumnType("money(19,4)");
		});
    }
}
