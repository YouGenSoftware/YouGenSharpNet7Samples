/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200541 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.AspNetCore.SignalR;
using Northwind_Common.IndirectReferenceTransformerModels;
using Northwind_BackEndCommon.RequestHandlers;
namespace Northwind_BackEndSignalRWebsocketServer.Hubs;
public class Northwind_dbo_Order_Details_Hub : Hub<INorthwind_dbo_Order_Details_Hub>
{
	private readonly INorthwind_dbo_Order_Details_RequestHandler _requestHandler;
	public Northwind_dbo_Order_Details_Hub(INorthwind_dbo_Order_Details_RequestHandler requestHandler)
	{
		_requestHandler = requestHandler;
	}
	public async Task<IEnumerable<Northwind_dbo_Order_Details_IR>?> GetAll()
	{
		return await _requestHandler.HandleGetAll();
	}
	public async Task<IEnumerable<Northwind_dbo_Order_Details_IR>?> GetByOrderIDAndProductID(String? orderID_IR, String? productID_IR)
	{
		return await _requestHandler.HandleGetByOrderIDAndProductID(orderID_IR, productID_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Order_Details_IR>?> GetByOrderID(String? orderID_IR)
	{
		return await _requestHandler.HandleGetByOrderID(orderID_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Order_Details_IR>?> GetByProductID(String? productID_IR)
	{
		return await _requestHandler.HandleGetByProductID(productID_IR);
	}
	public async Task<Northwind_dbo_Order_Details_IR?> Create(Northwind_dbo_Order_Details_IR input)
	{
		return await _requestHandler.HandleCreate(input);
	}
	public async Task UpdateByOrderIDAndProductID(String? orderID_IR, String? productID_IR, Northwind_dbo_Order_Details_IR input)
	{
		await _requestHandler.HandleUpdateByOrderIDAndProductID(orderID_IR, productID_IR, input);
	}
	public async Task UpdateByOrderID(String? orderID_IR, Northwind_dbo_Order_Details_IR input)
	{
		await _requestHandler.HandleUpdateByOrderID(orderID_IR, input);
	}
	public async Task UpdateByProductID(String? productID_IR, Northwind_dbo_Order_Details_IR input)
	{
		await _requestHandler.HandleUpdateByProductID(productID_IR, input);
	}
	public async Task DeleteByOrderIDAndProductID(String? orderID_IR, String? productID_IR)
	{
		await _requestHandler.HandleDeleteByOrderIDAndProductID(orderID_IR, productID_IR);
	}
	public async Task DeleteByOrderID(String? orderID_IR)
	{
		await _requestHandler.HandleDeleteByOrderID(orderID_IR);
	}
	public async Task DeleteByProductID(String? productID_IR)
	{
		await _requestHandler.HandleDeleteByProductID(productID_IR);
	}
}
