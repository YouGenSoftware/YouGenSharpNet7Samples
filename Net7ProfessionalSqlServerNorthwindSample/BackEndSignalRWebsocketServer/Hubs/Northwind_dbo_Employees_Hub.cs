/* **** This file and its contents were generated by YouGen Sharp on (UTC) 20230307200541 on behalf of: ****
**** You Gen Software LLC ****
**** 5961 BeaconPark St ****
**** Lithia Florida 33547 United States of America ****
**** whose account is uniquely identified by: 716881407 ****
**** This file and its contents are subject to the conditions of use for the Professional Tier License as specified at: https://www.yougensoft.com/en/conditions-of-use. ****
**** This comment block must not be removed. ****
 */
using Microsoft.AspNetCore.SignalR;
using Northwind_Common.IndirectReferenceTransformerModels;
using Northwind_BackEndCommon.RequestHandlers;
namespace Northwind_BackEndSignalRWebsocketServer.Hubs;
public class Northwind_dbo_Employees_Hub : Hub<INorthwind_dbo_Employees_Hub>
{
	private readonly INorthwind_dbo_Employees_RequestHandler _requestHandler;
	public Northwind_dbo_Employees_Hub(INorthwind_dbo_Employees_RequestHandler requestHandler)
	{
		_requestHandler = requestHandler;
	}
	public async Task<IEnumerable<Northwind_dbo_Employees_IR>?> GetAll()
	{
		return await _requestHandler.HandleGetAll();
	}
	public async Task<IEnumerable<Northwind_dbo_Employees_IR>?> GetByLastName(String lastName)
	{
		return await _requestHandler.HandleGetByLastName(lastName);
	}
	public async Task<IEnumerable<Northwind_dbo_Employees_IR>?> GetByEmployeeID(String? employeeID_IR)
	{
		return await _requestHandler.HandleGetByEmployeeID(employeeID_IR);
	}
	public async Task<IEnumerable<Northwind_dbo_Employees_IR>?> GetByPostalCode(String? postalCode)
	{
		return await _requestHandler.HandleGetByPostalCode(postalCode);
	}
	public async Task<Northwind_dbo_Employees_IR?> Create(Northwind_dbo_Employees_IR input)
	{
		return await _requestHandler.HandleCreate(input);
	}
	public async Task UpdateByLastName(String lastName, Northwind_dbo_Employees_IR input)
	{
		await _requestHandler.HandleUpdateByLastName(lastName, input);
	}
	public async Task UpdateByEmployeeID(String? employeeID_IR, Northwind_dbo_Employees_IR input)
	{
		await _requestHandler.HandleUpdateByEmployeeID(employeeID_IR, input);
	}
	public async Task UpdateByPostalCode(String? postalCode, Northwind_dbo_Employees_IR input)
	{
		await _requestHandler.HandleUpdateByPostalCode(postalCode, input);
	}
	public async Task DeleteByLastName(String lastName)
	{
		await _requestHandler.HandleDeleteByLastName(lastName);
	}
	public async Task DeleteByEmployeeID(String? employeeID_IR)
	{
		await _requestHandler.HandleDeleteByEmployeeID(employeeID_IR);
	}
	public async Task DeleteByPostalCode(String? postalCode)
	{
		await _requestHandler.HandleDeleteByPostalCode(postalCode);
	}
}
